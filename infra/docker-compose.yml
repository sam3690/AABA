version: "3.9"

networks:
  aaba:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  redis_data:
  minio_data:
  weaviate_data:
  prometheus_data:
  grafana_data:
  loki_data:

services:
  backend:
    build: ../backend
    container_name: aaba-backend
    command: uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ../backend:/app
    env_file:
      - ../.env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
      otel-collector:
        condition: service_started
    ports:
      - "8000:8000"
    networks:
      - aaba

  frontend:
    build: ../frontend
    container_name: aaba-frontend
    volumes:
      - ../frontend:/app
    env_file:
      - ../.env
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    networks:
      - aaba

  celery-worker:
    build:
      context: ../backend
      dockerfile: Dockerfile.celery
    container_name: aaba-celery-worker
    command: uv run celery -A app.workers.job_tasks worker --loglevel=info
    volumes:
      - ../backend:/app
    env_file:
      - ../.env
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - aaba

  celery-beat:
    build:
      context: ../backend
      dockerfile: Dockerfile.celery
    container_name: aaba-celery-beat
    command: uv run celery -A app.workers.job_tasks beat --loglevel=info
    volumes:
      - ../backend:/app
    env_file:
      - ../.env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - aaba

  flower:
    image: mher/flower:2.0
    container_name: aaba-flower
    env_file:
      - ../.env
    environment:
      - FLOWER_PORT=5555
    command: flower --url-prefix=flower --address=0.0.0.0 --port=5555 --broker=${REDIS_URL}
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - aaba

  mongo:
    image: mongo:6
    container_name: aaba-mongo
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - aaba

  mongo-express:
    image: mongo-express:1.0.2
    container_name: aaba-mongo-express
    environment:
      - ME_CONFIG_MONGODB_URL=${MONGO_URI}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      mongo:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - aaba

  postgres:
    image: postgres:15
    container_name: aaba-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - aaba

  pgadmin:
    image: dpage/pgadmin4:8.10
    container_name: aaba-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      postgres:
        condition: service_started
    ports:
      - "5050:80"
    networks:
      - aaba

  redis:
    image: redis:7
    container_name: aaba-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - aaba

  redis-exporter:
    image: oliver006/redis_exporter:v1.61.0
    container_name: aaba-redis-exporter
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "9121:9121"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - aaba

  nats:
    image: nats:2.10
    container_name: aaba-nats
    command: -js
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - aaba

  minio:
    image: minio/minio:RELEASE.2024-09-22T00-00-00Z
    container_name: aaba-minio
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - aaba

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: aaba-postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      postgres:
        condition: service_started
    networks:
      - aaba

  minio-create-bucket:
    image: minio/mc:RELEASE.2024-09-16T09-14-34Z
    container_name: aaba-minio-setup
    depends_on:
      minio:
        condition: service_started
    env_file:
      - ../.env
    entrypoint: |
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb --ignore-existing local/${MINIO_BUCKET};
      mc anonymous set download local/${MINIO_BUCKET};
      exit 0
      "
    networks:
      - aaba

  weaviate:
    image: semitechnologies/weaviate:1.24.16
    container_name: aaba-weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      DEFAULT_VECTORIZER_MODULE: "none"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
    ports:
      - "8080:8080"
      - "50051:50051"
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - aaba

  otel-collector:
    image: otel/opentelemetry-collector:0.97.0
    container_name: aaba-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"
    networks:
      - aaba

  prometheus:
    image: prom/prometheus:v3.0.0
    container_name: aaba-prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-remote-write-receiver
    ports:
      - "9090:9090"
    depends_on:
      otel-collector:
        condition: service_started
    networks:
      - aaba

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: aaba-alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    networks:
      - aaba

  loki:
    image: grafana/loki:3.1.0
    container_name: aaba-loki
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml:ro
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - aaba

  promtail:
    image: grafana/promtail:3.1.0
    container_name: aaba-promtail
    command: -config.file=/etc/promtail/config.yaml
    volumes:
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail/config.yaml:/etc/promtail/config.yaml:ro
    networks:
      - aaba

  grafana:
    image: grafana/grafana-oss:11.1.3
    container_name: aaba-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3001:3000"
    depends_on:
      prometheus:
        condition: service_started
      loki:
        condition: service_started
    networks:
      - aaba

  jaeger:
    image: jaegertracing/all-in-one:1.58
    container_name: aaba-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "14268:14268"
      - "4319:4317"
    networks:
      - aaba
